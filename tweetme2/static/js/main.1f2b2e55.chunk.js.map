{"version":3,"sources":["logo.svg","lookup/components.js","tweets/buttons.js","tweets/lookup.js","tweets/create.js","tweets/detail.js","tweets/list.js","tweets/components.js","App.js","serviceWorker.js","index.js"],"names":["backendLookup","method","endpoint","callback","data","jsonData","JSON","stringify","xhr","XMLHttpRequest","url","responseType","csrftoken","name","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","getCookie","open","setRequestHeader","onload","response","status","onerror","e","console","log","send","ActionBtn","props","tweet","action","didPerformAction","likes","className","actionDisplay","display","handleActionBackendEvent","type","onClick","event","preventDefault","tweetId","id","apiTweetAction","TweetCreate","textAreaRef","React","createRef","didTweet","handleBackendUpdate","alert","onSubmit","newVal","current","value","content","ref","required","ParentTweet","parent","Tweet","hideActions","didRetweet","useState","actionTweet","setActionTweet","match","window","location","pathname","urlTweetId","groups","tweetid","isDetail","handlePerformAction","newActionTweet","Fragment","href","TweetsList","tweetsInit","setTweetsInit","tweets","setTweets","tweetsDidSet","setTweetsDidSet","useEffect","final","newTweets","concat","username","apiTweetList","handleDidRetweet","newTweet","updateTweetsInit","unshift","updateFinalTweets","map","item","index","TweetsComponent","setNewTweets","canTweet","tempNewTweets","TweetDetailComponent","didLookup","setDidLookup","setTweet","handleBackendLookup","apiTweetDetail","App","src","logo","alt","target","rel","Boolean","hostname","appEl","getElementById","ReactDOM","render","createElement","tweetsEl","dataset","querySelectorAll","forEach","container","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1f2b2e55.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","function getCookie(name) {\r\n    var cookieValue = null;\r\n    if (document.cookie && document.cookie !== '') {\r\n        var cookies = document.cookie.split(';');\r\n        for (var i = 0; i < cookies.length; i++) {\r\n            var cookie = cookies[i].trim();\r\n            // Does this cookie string begin with the name we want?\r\n            if (cookie.substring(0, name.length + 1) === (name + '=')) {\r\n                cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    return cookieValue;\r\n  }\r\n  \r\n  export function backendLookup(method, endpoint, callback, data) {\r\n    let jsonData;\r\n    if (data){\r\n      jsonData = JSON.stringify(data)\r\n    }\r\n    const xhr = new XMLHttpRequest()\r\n    const url = `http://localhost:8000/api${endpoint}`\r\n    xhr.responseType = \"json\"\r\n    const csrftoken = getCookie('csrftoken');\r\n    xhr.open(method, url)\r\n    xhr.setRequestHeader(\"Content-Type\", \"application/json\")\r\n  \r\n    if (csrftoken){\r\n      xhr.setRequestHeader(\"HTTP_X_REQUESTED_WITH\", \"XMLHttpRequest\")\r\n      xhr.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\")\r\n      xhr.setRequestHeader(\"X-CSRFToken\", csrftoken)\r\n    }\r\n    \r\n    xhr.onload = function() {\r\n      callback(xhr.response, xhr.status)\r\n    }\r\n    xhr.onerror = function (e) {\r\n      console.log(e)\r\n      callback({\"message\": \"The request was an error\"}, 400)\r\n    }\r\n    xhr.send(jsonData)\r\n  }","import React from 'react'\r\n\r\nimport {apiTweetAction} from './lookup'\r\n\r\nexport function ActionBtn(props) {\r\n    const {tweet, action, didPerformAction} = props\r\n    const likes = tweet.likes ? tweet.likes : 0\r\n    const className = props.className ? props.className : 'btn btn-primary btn-sm'\r\n    const actionDisplay = action.display ? action.display : 'Action'\r\n    \r\n    const handleActionBackendEvent = (response, status) =>{\r\n      console.log(response, status)\r\n      if ((status === 200 || status === 201) && didPerformAction){\r\n        didPerformAction(response, status)\r\n      }\r\n    }\r\n    const handleClick = (event) => {\r\n      event.preventDefault()\r\n      apiTweetAction(tweet.id, action.type, handleActionBackendEvent)\r\n        \r\n    }\r\n    const display = action.type === 'like' ? `${likes} ${actionDisplay}` : actionDisplay\r\n    return <button className={className} onClick={handleClick}>{display}</button>\r\n  }","import {backendLookup} from '../lookup'\r\n\r\nexport function apiTweetCreate(newTweet, callback){\r\n    backendLookup(\"POST\", \"/tweets/create/\", callback, {content: newTweet})\r\n  }\r\n\r\nexport function apiTweetAction(tweetId, action, callback){\r\n    const data = {id: tweetId, action: action}\r\n    backendLookup(\"POST\", \"/tweets/action/\", callback, data)\r\n}\r\n\r\nexport function apiTweetDetail(tweetId, callback) {\r\n    backendLookup(\"GET\", `/tweets/${tweetId}/`, callback)\r\n}\r\n\r\n\r\nexport function apiTweetList(username, callback) {\r\n    let endpoint =  \"/tweets/\"\r\n    if (username){\r\n        endpoint =  `/tweets/?username=${username}`\r\n    }\r\n    backendLookup(\"GET\", endpoint, callback)\r\n}","import React from 'react'\r\nimport {apiTweetCreate} from './lookup'\r\n\r\n\r\nexport function TweetCreate(props){\r\n  const textAreaRef = React.createRef()\r\n  const {didTweet} = props\r\n    const handleBackendUpdate = (response, status) =>{\r\n      if (status === 201){\r\n        didTweet(response)\r\n      } else {\r\n        console.log(response)\r\n        alert(\"An error occured please try again\")\r\n      }\r\n    }\r\n\r\n    const handleSubmit = (event) => {\r\n      event.preventDefault()\r\n      const newVal = textAreaRef.current.value\r\n      // backend api request\r\n      apiTweetCreate(newVal, handleBackendUpdate)\r\n      textAreaRef.current.value = ''\r\n    }\r\n    return <div className={props.className}>\r\n          <form onSubmit={handleSubmit}>\r\n            <textarea ref={textAreaRef} required={true} className='form-control' name='tweet'>\r\n\r\n            </textarea>\r\n            <button type='submit' className='btn btn-primary my-3'>Tweet</button>\r\n        </form>\r\n  </div>\r\n}","import React, {useState}  from 'react'\r\n\r\nimport {ActionBtn} from './buttons'\r\n\r\nexport function ParentTweet(props){\r\n    const {tweet} = props\r\n    return tweet.parent ? <div className='row'>\r\n    <div className='col-11 mx-auto p-3 border rounded'>\r\n      <p className='mb-0 text-muted small'>Retweet</p>\r\n      <Tweet hideActions className={' '} tweet={tweet.parent} />\r\n    </div>\r\n    </div> : null\r\n  }\r\n  export function Tweet(props) {\r\n      const {tweet, didRetweet, hideActions} = props\r\n      const [actionTweet, setActionTweet] = useState(props.tweet ? props.tweet : null)\r\n      const className = props.className ? props.className : 'col-10 mx-auto col-md-6'\r\n      const path = window.location.pathname\r\n      const match = path.match(/(?<tweetid>\\d+)/)\r\n      const urlTweetId = match ? match.groups.tweetid : -1\r\n      const isDetail = `${tweet.id}` === `${urlTweetId}`\r\n      \r\n      const handleLink = (event) => {\r\n        event.preventDefault()\r\n        window.location.href = `/${tweet.id}`\r\n      }\r\n      const handlePerformAction = (newActionTweet, status) => {\r\n        if (status === 200){\r\n          setActionTweet(newActionTweet)\r\n        } else if (status === 201) {\r\n          if (didRetweet){\r\n            didRetweet(newActionTweet)\r\n          }\r\n        }\r\n        \r\n      }\r\n      \r\n      return <div className={className}>\r\n              <div>\r\n                <p>{tweet.id} - {tweet.content}</p>\r\n                <ParentTweet tweet={tweet} />\r\n              </div>\r\n          <div className='btn btn-group'>\r\n          {(actionTweet && hideActions !== true) && <React.Fragment>\r\n                  <ActionBtn tweet={actionTweet} didPerformAction={handlePerformAction} action={{type: \"like\", display:\"Likes\"}}/>\r\n                  <ActionBtn tweet={actionTweet} didPerformAction={handlePerformAction} action={{type: \"unlike\", display:\"Unlike\"}}/>\r\n                  <ActionBtn tweet={actionTweet} didPerformAction={handlePerformAction} action={{type: \"retweet\", display:\"Retweet\"}}/>\r\n                </React.Fragment>\r\n          }\r\n                  {isDetail === true ? null : <button className='btn btn-outline-primary btn-sm' onClick={handleLink}>View</button>}\r\n                </div>\r\n       \r\n      </div>\r\n    }","import React, {useEffect, useState}  from 'react'\r\n\r\nimport {apiTweetList} from './lookup'\r\n\r\nimport {Tweet} from './detail'\r\n\r\nexport function TweetsList(props) {\r\n    const [tweetsInit, setTweetsInit] = useState([])\r\n    const [tweets, setTweets] = useState([])\r\n    const [tweetsDidSet, setTweetsDidSet] = useState(false)\r\n    useEffect(()=>{\r\n      const final = [...props.newTweets].concat(tweetsInit)\r\n      if (final.length !== tweets.length) {\r\n        setTweets(final)\r\n      }\r\n    }, [props.newTweets, tweets, tweetsInit])\r\n\r\n    useEffect(() => {\r\n      if (tweetsDidSet === false){\r\n        const handleTweetListLookup = (response, status) => {\r\n          if (status === 200){\r\n            setTweetsInit(response)\r\n            setTweetsDidSet(true)\r\n          } else {\r\n            alert(\"There was an error\")\r\n          }\r\n        }\r\n        apiTweetList(props.username, handleTweetListLookup)\r\n      }\r\n    }, [tweetsInit, tweetsDidSet, setTweetsDidSet, props.username])\r\n\r\n\r\n    const handleDidRetweet = (newTweet) => {\r\n      const updateTweetsInit = [...tweetsInit]\r\n      updateTweetsInit.unshift(newTweet)\r\n      setTweetsInit(updateTweetsInit)\r\n      const updateFinalTweets = [...tweets]\r\n      updateFinalTweets.unshift(tweets)\r\n      setTweets(updateFinalTweets)\r\n    }\r\n    return tweets.map((item, index)=>{\r\n      return <Tweet  \r\n        tweet={item} \r\n        didRetweet={handleDidRetweet}\r\n        className='my-5 py-5 border bg-white text-dark' \r\n        key={`${index}-{item.id}`} />\r\n    })\r\n  }","import React, {useEffect, useState}  from 'react'\r\n\r\nimport {TweetCreate} from './create'\r\nimport {Tweet} from './detail'\r\nimport {apiTweetDetail} from './lookup'\r\nimport {TweetsList} from './list'\r\n\r\n\r\nexport function TweetsComponent(props) {\r\n    const [newTweets, setNewTweets] = useState([])\r\n    const canTweet = props.canTweet === \"false\" ? false : true\r\n    const handleNewTweet = (newTweet) =>{\r\n      let tempNewTweets = [...newTweets]\r\n      tempNewTweets.unshift(newTweet)\r\n      setNewTweets(tempNewTweets)\r\n    }\r\n    return <div className={props.className}>\r\n            {canTweet === true && <TweetCreate didTweet={handleNewTweet} className='col-12 mb-3' />}\r\n          <TweetsList newTweets={newTweets} {...props} />\r\n    </div>\r\n}\r\n\r\n\r\nexport function TweetDetailComponent(props){\r\n  const {tweetId} = props\r\n  const [didLookup, setDidLookup] = useState(false)\r\n  const [tweet, setTweet] = useState(null)\r\n\r\n  const handleBackendLookup = (response, status) => {\r\n    if (status === 200) {\r\n      setTweet(response)\r\n    } else {\r\n      alert(\"There was an error finding your tweet.\")\r\n    }\r\n  }\r\n  useEffect(()=>{\r\n    if (didLookup === false){\r\n\r\n      apiTweetDetail(tweetId, handleBackendLookup)\r\n      setDidLookup(true)\r\n    }\r\n  }, [tweetId, didLookup, setDidLookup])\r\n\r\n  return tweet === null ? null : <Tweet tweet={tweet} className={props.className} />\r\n }","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nimport {TweetsComponent} from './tweets'\n\n\nfunction App() {\n  \n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <div>\n          <TweetsComponent />\n        </div>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n      // [::1] is the IPv6 localhost address.\r\n      window.location.hostname === '[::1]' ||\r\n      // 127.0.0.0/8 are considered localhost for IPv4.\r\n      window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n      )\r\n  );\r\n  \r\n  export function register(config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n      // The URL constructor is available in all browsers that support SW.\r\n      const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n      if (publicUrl.origin !== window.location.origin) {\r\n        // Our service worker won't work if PUBLIC_URL is on a different origin\r\n        // from what our page is served on. This might happen if a CDN is used to\r\n        // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n        return;\r\n      }\r\n  \r\n      window.addEventListener('load', () => {\r\n        const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n  \r\n        if (isLocalhost) {\r\n          // This is running on localhost. Let's check if a service worker still exists or not.\r\n          checkValidServiceWorker(swUrl, config);\r\n  \r\n          // Add some additional logging to localhost, pointing developers to the\r\n          // service worker/PWA documentation.\r\n          navigator.serviceWorker.ready.then(() => {\r\n            console.log(\r\n              'This web app is being served cache-first by a service ' +\r\n                'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n            );\r\n          });\r\n        } else {\r\n          // Is not localhost. Just register service worker\r\n          registerValidSW(swUrl, config);\r\n        }\r\n      });\r\n    }\r\n  }\r\n  \r\n  function registerValidSW(swUrl, config) {\r\n    navigator.serviceWorker\r\n      .register(swUrl)\r\n      .then(registration => {\r\n        registration.onupdatefound = () => {\r\n          const installingWorker = registration.installing;\r\n          if (installingWorker == null) {\r\n            return;\r\n          }\r\n          installingWorker.onstatechange = () => {\r\n            if (installingWorker.state === 'installed') {\r\n              if (navigator.serviceWorker.controller) {\r\n                // At this point, the updated precached content has been fetched,\r\n                // but the previous service worker will still serve the older\r\n                // content until all client tabs are closed.\r\n                console.log(\r\n                  'New content is available and will be used when all ' +\r\n                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n                );\r\n  \r\n                // Execute callback\r\n                if (config && config.onUpdate) {\r\n                  config.onUpdate(registration);\r\n                }\r\n              } else {\r\n                // At this point, everything has been precached.\r\n                // It's the perfect time to display a\r\n                // \"Content is cached for offline use.\" message.\r\n                console.log('Content is cached for offline use.');\r\n  \r\n                // Execute callback\r\n                if (config && config.onSuccess) {\r\n                  config.onSuccess(registration);\r\n                }\r\n              }\r\n            }\r\n          };\r\n        };\r\n      })\r\n      .catch(error => {\r\n        console.error('Error during service worker registration:', error);\r\n      });\r\n  }\r\n  \r\n  function checkValidServiceWorker(swUrl, config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl, {\r\n      headers: { 'Service-Worker': 'script' }\r\n    })\r\n      .then(response => {\r\n        // Ensure service worker exists, and that we really are getting a JS file.\r\n        const contentType = response.headers.get('content-type');\r\n        if (\r\n          response.status === 404 ||\r\n          (contentType != null && contentType.indexOf('javascript') === -1)\r\n        ) {\r\n          // No service worker found. Probably a different app. Reload the page.\r\n          navigator.serviceWorker.ready.then(registration => {\r\n            registration.unregister().then(() => {\r\n              window.location.reload();\r\n            });\r\n          });\r\n        } else {\r\n          // Service worker found. Proceed as normal.\r\n          registerValidSW(swUrl, config);\r\n        }\r\n      })\r\n      .catch(() => {\r\n        console.log(\r\n          'No internet connection found. App is running in offline mode.'\r\n        );\r\n      });\r\n  }\r\n  \r\n  export function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n      navigator.serviceWorker.ready.then(registration => {\r\n        registration.unregister();\r\n      });\r\n    }\r\n  }","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {TweetsComponent, TweetDetailComponent} from './tweets'\nimport * as serviceWorker from './serviceWorker';\n\nconst appEl = document.getElementById('root')\nif (appEl) {\n    ReactDOM.render(<App />, appEl);\n}\nconst e = React.createElement\nconst tweetsEl = document.getElementById(\"tweetme-2\")\nif (tweetsEl) {\n    ReactDOM.render(\n        e(TweetsComponent, tweetsEl.dataset), tweetsEl);\n}\n\nconst tweetDetailElements = document.querySelectorAll(\".tweetme-2-detail\")\n\ntweetDetailElements.forEach(container=> {\n    ReactDOM.render(\n        e(TweetDetailComponent, container.dataset), \n        container);\n})\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}