{"version":3,"sources":["logo.svg","lookup/components.js","tweets/lookup.js","tweets/buttons.js","tweets/create.js","profiles/components.js","profiles/utils.js","profiles/badge.js","profiles/lookup.js","tweets/detail.js","tweets/feed.js","tweets/list.js","tweets/components.js","App.js","serviceWorker.js","index.js"],"names":["backendLookup","method","endpoint","callback","data","jsonData","JSON","stringify","xhr","XMLHttpRequest","url","responseType","csrftoken","name","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","getCookie","open","setRequestHeader","onload","status","response","detail","window","location","href","indexOf","onerror","e","send","apiTweetFeed","nextUrl","undefined","replace","apiTweetList","username","ActionBtn","props","tweet","action","didPerformAction","likes","className","actionDisplay","display","handleActionBackendEvent","console","log","type","onClick","event","preventDefault","tweetId","id","apiTweetAction","TweetCreate","textAreaRef","React","createRef","didTweet","handleBackendUpdate","alert","onSubmit","newVal","current","value","content","ref","required","UserLink","children","UserDisplay","user","includeFullName","hideLink","nameDisplay","first_name","last_name","Fragment","UserPicture","userIdSpan","DisplayCount","numeral","format","ProfileBadge","didFollowToggle","profileLoading","currentVerb","is_following","follower_count","following_count","bio","ProfileBadgeComponent","useState","didLookup","setDidLookup","profile","setProfile","setProfileLoading","handleBackendLookup","useEffect","apiProfileDetail","actionVerb","toLowerCase","apiProfileFollowToggle","ParentTweet","parent","Tweet","isRetweet","retweeter","hideActions","didRetweet","actionTweet","setActionTweet","match","pathname","urlTweetId","groups","tweetid","isDetail","handlePerformAction","newActionTweet","FeedList","tweetsInit","setTweetsInit","tweets","setTweets","setNextUrl","tweetsDidSet","setTweetsDidSet","final","newTweets","concat","next","results","handleDidRetweet","newTweet","updateTweetsInit","unshift","updateFinalTweets","map","item","index","TweetsList","TweetsComponent","setNewTweets","canTweet","tempNewTweets","TweetDetailComponent","setTweet","apiTweetDetail","App","src","logo","alt","target","rel","Boolean","hostname","appEl","getElementById","ReactDOM","render","createElement","tweetsEl","dataset","tweetFeedEl","querySelectorAll","forEach","container","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a9ca00d0.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","function getCookie(name) {\r\n  var cookieValue = null;\r\n  if (document.cookie && document.cookie !== '') {\r\n      var cookies = document.cookie.split(';');\r\n      for (var i = 0; i < cookies.length; i++) {\r\n          var cookie = cookies[i].trim();\r\n          // Does this cookie string begin with the name we want?\r\n          if (cookie.substring(0, name.length + 1) === (name + '=')) {\r\n              cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\r\n              break;\r\n          }\r\n      }\r\n  }\r\n  return cookieValue;\r\n}\r\n\r\nexport function backendLookup(method, endpoint, callback, data) {\r\n  let jsonData;\r\n  if (data){\r\n    jsonData = JSON.stringify(data)\r\n  }\r\n  const xhr = new XMLHttpRequest()\r\n  const url = `http://localhost:8000/api${endpoint}`\r\n  xhr.responseType = \"json\"\r\n  const csrftoken = getCookie('csrftoken');\r\n  xhr.open(method, url)\r\n  xhr.setRequestHeader(\"Content-Type\", \"application/json\")\r\n\r\n  if (csrftoken){\r\n    // xhr.setRequestHeader(\"HTTP_X_REQUESTED_WITH\", \"XMLHttpRequest\")\r\n    xhr.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\")\r\n    xhr.setRequestHeader(\"X-CSRFToken\", csrftoken)\r\n  }\r\n  \r\n  xhr.onload = function() {\r\n    if (xhr.status === 403) {\r\n      const detail = xhr.response.detail\r\n      if (detail === \"Authentication credentials were not provided.\"){\r\n        if (window.location.href.indexOf(\"login\") === -1) {\r\n          window.location.href = \"/login?showLoginRequired=true\"\r\n        }\r\n      }\r\n    }\r\n    callback(xhr.response, xhr.status)\r\n  }\r\n  xhr.onerror = function (e) {\r\n    callback({\"message\": \"The request was an error\"}, 400)\r\n  }\r\n  xhr.send(jsonData)\r\n}","import {backendLookup} from '../lookup'\r\n\r\nexport function apiTweetCreate(newTweet, callback){\r\n    backendLookup(\"POST\", \"/tweets/create/\", callback, {content: newTweet})\r\n  }\r\n\r\nexport function apiTweetAction(tweetId, action, callback){\r\n    const data = {id: tweetId, action: action}\r\n    backendLookup(\"POST\", \"/tweets/action/\", callback, data)\r\n}\r\n\r\nexport function apiTweetDetail(tweetId, callback) {\r\n    backendLookup(\"GET\", `/tweets/${tweetId}/`, callback)\r\n}\r\n\r\nexport function apiTweetFeed(callback, nextUrl) {\r\n    let endpoint =  \"/tweets/feed/\"\r\n    if (nextUrl !== null && nextUrl !== undefined) {\r\n        endpoint = nextUrl.replace(\"http://localhost:8000/api\", \"\")\r\n    }\r\n    backendLookup(\"GET\", endpoint, callback)\r\n}\r\n\r\n\r\nexport function apiTweetList(username, callback, nextUrl) {\r\n    let endpoint =  \"/tweets/\"\r\n    if (username){\r\n        endpoint =  `/tweets/?username=${username}`\r\n    }\r\n    if (nextUrl !== null && nextUrl !== undefined) {\r\n        endpoint = nextUrl.replace(\"http://localhost:8000/api\", \"\")\r\n    }\r\n    backendLookup(\"GET\", endpoint, callback)\r\n}","import React from 'react'\r\n\r\nimport {apiTweetAction} from './lookup'\r\n\r\nexport function ActionBtn(props) {\r\n    const {tweet, action, didPerformAction} = props\r\n    const likes = tweet.likes ? tweet.likes : 0\r\n    const className = props.className ? props.className : 'btn btn-primary btn-sm'\r\n    const actionDisplay = action.display ? action.display : 'Action'\r\n    \r\n    const handleActionBackendEvent = (response, status) =>{\r\n      console.log(response, status)\r\n      if ((status === 200 || status === 201) && didPerformAction){\r\n        didPerformAction(response, status)\r\n      }\r\n    }\r\n    const handleClick = (event) => {\r\n      event.preventDefault()\r\n      apiTweetAction(tweet.id, action.type, handleActionBackendEvent)\r\n        \r\n    }\r\n    const display = action.type === 'like' ? `${likes} ${actionDisplay}` : actionDisplay\r\n    return <button className={className} onClick={handleClick}>{display}</button>\r\n  }","import React from 'react'\r\nimport {apiTweetCreate} from './lookup'\r\n\r\n\r\nexport function TweetCreate(props){\r\n  const textAreaRef = React.createRef()\r\n  const {didTweet} = props\r\n    const handleBackendUpdate = (response, status) =>{\r\n      if (status === 201){\r\n        didTweet(response)\r\n      } else {\r\n        console.log(response)\r\n        alert(\"An error occured please try again\")\r\n      }\r\n    }\r\n\r\n    const handleSubmit = (event) => {\r\n      event.preventDefault()\r\n      const newVal = textAreaRef.current.value\r\n      // backend api request\r\n      apiTweetCreate(newVal, handleBackendUpdate)\r\n      textAreaRef.current.value = ''\r\n    }\r\n    return <div className={props.className}>\r\n          <form onSubmit={handleSubmit}>\r\n            <textarea ref={textAreaRef} required={true} className='form-control' name='tweet'>\r\n\r\n            </textarea>\r\n            <button type='submit' className='btn btn-primary my-3'>Tweet</button>\r\n        </form>\r\n  </div>\r\n}","import React from 'react'\r\n\r\n\r\n\r\nexport function UserLink (props) {\r\n  const {username} = props\r\n  const handleUserLink = (event) => {\r\n    window.location.href= `/profiles/${username}`\r\n  }\r\n  return <span className='pointer' onClick={handleUserLink}>\r\n      {props.children}\r\n  </span>\r\n}\r\n\r\n\r\nexport  function UserDisplay(props){\r\n  const {user, includeFullName, hideLink} = props\r\n  const nameDisplay = includeFullName === true ? `${user.first_name} ${user.last_name} ` : null\r\n  return <React.Fragment>\r\n    {nameDisplay}\r\n    {hideLink === true ? `@${user.username}` : <UserLink username={user.username}>@{user.username}</UserLink>}\r\n  </React.Fragment>\r\n}\r\n\r\nexport  function UserPicture (props) {\r\n  const {user, hideLink} = props\r\n  const userIdSpan = <span className='mx-1 px-3 py-2 rounded-circle bg-dark text-white'>\r\n  {user.username[0]}\r\n</span>\r\n  return  hideLink === true ? userIdSpan : <UserLink username={user.username}>{userIdSpan}</UserLink>\r\n}","import React from 'react'\r\nimport numeral from 'numeral'\r\n\r\n\r\nexport function DisplayCount(props) {\r\n    return <span className={props.className}>{numeral(props.children).format(\"0a\")}</span>\r\n  }\r\n  ","import React, {useEffect, useState} from 'react'\r\n\r\nimport {UserDisplay, UserPicture} from './components'\r\nimport {apiProfileDetail, apiProfileFollowToggle} from './lookup'\r\n\r\nimport {DisplayCount} from './utils'\r\n\r\nfunction ProfileBadge(props) {\r\n    const {user, didFollowToggle, profileLoading} = props\r\n    let currentVerb = (user && user.is_following) ? \"Unfollow\" : \"Follow\"\r\n    currentVerb = profileLoading ? \"Loading...\" : currentVerb\r\n    const handleFollowToggle = (event) => {\r\n        event.preventDefault()\r\n        if (didFollowToggle && !profileLoading) {\r\n            didFollowToggle(currentVerb)\r\n        }\r\n    }\r\n    return user ? <div>\r\n        <UserPicture user={user} hideLink />\r\n        <p><UserDisplay user={user} includeFullName hideLink /></p>\r\n        <p><DisplayCount>{user.follower_count}</DisplayCount> {user.follower_count === 1 ? \"follower\" : \"followers\"} </p>\r\n        <p><DisplayCount>{user.following_count}</DisplayCount> following</p>\r\n        <p>{user.location}</p>\r\n        <p>{user.bio}</p>\r\n        <button className='btn btn-primary' onClick={handleFollowToggle}>{currentVerb}</button>\r\n    </div> : null\r\n}\r\n\r\nexport function ProfileBadgeComponent (props) {\r\n    const {username} = props\r\n    // lookup\r\n    const [didLookup, setDidLookup] = useState(false)\r\n    const [profile, setProfile] = useState(null)\r\n    const [profileLoading, setProfileLoading] = useState(false)\r\n    const handleBackendLookup = (response, status) => {\r\n      if (status === 200) {\r\n        setProfile(response)\r\n      }\r\n    }\r\n    useEffect(()=>{\r\n      if (didLookup === false){\r\n        apiProfileDetail(username, handleBackendLookup)\r\n        setDidLookup(true)\r\n      }\r\n    }, [username, didLookup, setDidLookup])\r\n\r\n    const handleNewFollow = (actionVerb) => {\r\n        apiProfileFollowToggle(username, actionVerb, (response, status)=>{\r\n            // console.log(response, status)\r\n            if (status===200) {\r\n                setProfile(response)\r\n                // apiProfileDetail(username, handleBackendLookup)\r\n            }\r\n            setProfileLoading(false)\r\n        })\r\n        setProfileLoading(true)\r\n        \r\n    }\r\n    return didLookup === false ? \"Loading...\" : profile ? <ProfileBadge user={profile} didFollowToggle={handleNewFollow} profileLoading={profileLoading} /> : null\r\n}","import {backendLookup} from '../lookup'\r\n\r\nexport function apiProfileDetail(username, callback) {\r\n    backendLookup(\"GET\", `/profiles/${username}/`, callback)\r\n}\r\n\r\n\r\nexport function apiProfileFollowToggle(username, action, callback) {\r\n    const data = {action: `${action && action}`.toLowerCase()}\r\n    backendLookup(\"POST\", `/profiles/${username}/follow`, callback, data)\r\n}","import React, {useState}  from 'react'\r\n\r\nimport {ActionBtn} from './buttons'\r\n\r\nimport {\r\n  UserDisplay,\r\n  UserPicture\r\n} from '../profiles'\r\n\r\nexport function ParentTweet(props){\r\n    const {tweet} = props\r\n    return tweet.parent ? <Tweet isRetweet retweeter={props.retweeter} hideActions className={' '} tweet={tweet.parent} /> : null\r\n  }\r\n  export function Tweet(props) {\r\n      const {tweet, didRetweet, hideActions, isRetweet, retweeter} = props\r\n      const [actionTweet, setActionTweet] = useState(props.tweet ? props.tweet : null)\r\n      let className = props.className ? props.className : 'col-10 mx-auto col-md-6'\r\n      className = isRetweet === true ? `${className} p-2 border rounded` : className\r\n      const path = window.location.pathname\r\n      const match = path.match(/(?<tweetid>\\d+)/)\r\n      const urlTweetId = match ? match.groups.tweetid : -1\r\n      const isDetail = `${tweet.id}` === `${urlTweetId}`\r\n      \r\n      const handleLink = (event) => {\r\n        event.preventDefault()\r\n        window.location.href = `/${tweet.id}`\r\n      }\r\n      const handlePerformAction = (newActionTweet, status) => {\r\n        if (status === 200){\r\n          setActionTweet(newActionTweet)\r\n        } else if (status === 201) {\r\n          if (didRetweet){\r\n            didRetweet(newActionTweet)\r\n          }\r\n        }\r\n        \r\n      }\r\n      \r\n      return <div className={className}>\r\n         {isRetweet === true && <div className='mb-2'>\r\n          <span className='small text-muted'>Retweet via <UserDisplay user={retweeter} /></span>\r\n        </div>}\r\n        <div className='d-flex'>\r\n       \r\n          <div className=''>\r\n            <UserPicture user={tweet.user} />\r\n          </div>\r\n          <div className='col-11'>\r\n              <div>\r\n             \r\n                <p>\r\n                  <UserDisplay includeFullName user={tweet.user} />\r\n                </p>\r\n                <p>{tweet.content}</p>\r\n               \r\n                <ParentTweet tweet={tweet} retweeter={tweet.user} />\r\n              </div>\r\n          <div className='btn btn-group px-0'>\r\n          {(actionTweet && hideActions !== true) && <React.Fragment>\r\n                  <ActionBtn tweet={actionTweet} didPerformAction={handlePerformAction} action={{type: \"like\", display:\"Likes\"}}/>\r\n                  <ActionBtn tweet={actionTweet} didPerformAction={handlePerformAction} action={{type: \"unlike\", display:\"Unlike\"}}/>\r\n                  <ActionBtn tweet={actionTweet} didPerformAction={handlePerformAction} action={{type: \"retweet\", display:\"Retweet\"}}/>\r\n                </React.Fragment>\r\n          }\r\n                  {isDetail === true ? null : <button className='btn btn-outline-primary btn-sm' onClick={handleLink}>View</button>}\r\n                </div>\r\n                </div>\r\n      </div>\r\n      </div>\r\n    }\r\n  ","import React, {useEffect, useState}  from 'react'\r\n\r\nimport {apiTweetFeed} from './lookup'\r\n\r\nimport {Tweet} from './detail'\r\n\r\nexport function FeedList(props) {\r\n    const [tweetsInit, setTweetsInit] = useState([])\r\n    const [tweets, setTweets] = useState([])\r\n    const [nextUrl, setNextUrl] = useState(null)\r\n    const [tweetsDidSet, setTweetsDidSet] = useState(false)\r\n    useEffect(()=>{\r\n      const final = [...props.newTweets].concat(tweetsInit)\r\n      if (final.length !== tweets.length) {\r\n        setTweets(final)\r\n      }\r\n    }, [props.newTweets, tweets, tweetsInit])\r\n\r\n    useEffect(() => {\r\n      if (tweetsDidSet === false){\r\n        const handleTweetListLookup = (response, status) => {\r\n          if (status === 200){\r\n            setNextUrl(response.next)\r\n            setTweetsInit(response.results)\r\n            setTweetsDidSet(true)\r\n          }\r\n        }\r\n        apiTweetFeed(handleTweetListLookup)\r\n      }\r\n    }, [tweetsInit, tweetsDidSet, setTweetsDidSet, props.username])\r\n\r\n\r\n    const handleDidRetweet = (newTweet) => {\r\n      const updateTweetsInit = [...tweetsInit]\r\n      updateTweetsInit.unshift(newTweet)\r\n      setTweetsInit(updateTweetsInit)\r\n      const updateFinalTweets = [...tweets]\r\n      updateFinalTweets.unshift(tweets)\r\n      setTweets(updateFinalTweets)\r\n    }\r\n    const handleLoadNext = (event) => {\r\n      event.preventDefault()\r\n      if (nextUrl !== null) {\r\n        const handleLoadNextResponse = (response, status) =>{\r\n          if (status === 200){\r\n            setNextUrl(response.next)\r\n            const newTweets = [...tweets].concat(response.results)\r\n            setTweetsInit(newTweets)\r\n            setTweets(newTweets)\r\n          }\r\n        }\r\n        apiTweetFeed(handleLoadNextResponse, nextUrl)\r\n      }\r\n    }\r\n\r\n    return <React.Fragment>{tweets.map((item, index)=>{\r\n      return <Tweet  \r\n        tweet={item} \r\n        didRetweet={handleDidRetweet}\r\n        className='my-5 py-5 border bg-white text-dark' \r\n        key={`${index}-{item.id}`} />\r\n    })}\r\n    {nextUrl !== null && <button onClick={handleLoadNext} className='btn btn-outline-primary'>Load next</button>}\r\n    </React.Fragment>\r\n  }","import React, {useEffect, useState}  from 'react'\r\n\r\nimport {apiTweetList} from './lookup'\r\n\r\nimport {Tweet} from './detail'\r\n\r\nexport function TweetsList(props) {\r\n    const [tweetsInit, setTweetsInit] = useState([])\r\n    const [tweets, setTweets] = useState([])\r\n    const [nextUrl, setNextUrl] = useState(null)\r\n    const [tweetsDidSet, setTweetsDidSet] = useState(false)\r\n    useEffect(()=>{\r\n      const final = [...props.newTweets].concat(tweetsInit)\r\n      if (final.length !== tweets.length) {\r\n        setTweets(final)\r\n      }\r\n    }, [props.newTweets, tweets, tweetsInit])\r\n\r\n    useEffect(() => {\r\n      if (tweetsDidSet === false){\r\n        const handleTweetListLookup = (response, status) => {\r\n          if (status === 200){\r\n            setNextUrl(response.next)\r\n            setTweetsInit(response.results)\r\n            setTweetsDidSet(true)\r\n          } else {\r\n            alert(\"There was an error\")\r\n          }\r\n        }\r\n        apiTweetList(props.username, handleTweetListLookup)\r\n      }\r\n    }, [tweetsInit, tweetsDidSet, setTweetsDidSet, props.username])\r\n\r\n\r\n    const handleDidRetweet = (newTweet) => {\r\n      const updateTweetsInit = [...tweetsInit]\r\n      updateTweetsInit.unshift(newTweet)\r\n      setTweetsInit(updateTweetsInit)\r\n      const updateFinalTweets = [...tweets]\r\n      updateFinalTweets.unshift(tweets)\r\n      setTweets(updateFinalTweets)\r\n    }\r\n    const handleLoadNext = (event) => {\r\n      event.preventDefault()\r\n      if (nextUrl !== null) {\r\n        const handleLoadNextResponse = (response, status) =>{\r\n          if (status === 200){\r\n            setNextUrl(response.next)\r\n            const newTweets = [...tweets].concat(response.results)\r\n            setTweetsInit(newTweets)\r\n            setTweets(newTweets)\r\n          } else {\r\n            alert(\"There was an error\")\r\n          }\r\n        }\r\n        apiTweetList(props.username, handleLoadNextResponse, nextUrl)\r\n      }\r\n    }\r\n\r\n    return <React.Fragment>{tweets.map((item, index)=>{\r\n      return <Tweet  \r\n        tweet={item} \r\n        didRetweet={handleDidRetweet}\r\n        className='my-5 py-5 border bg-white text-dark' \r\n        key={`${index}-{item.id}`} />\r\n    })}\r\n    {nextUrl !== null && <button onClick={handleLoadNext} className='btn btn-outline-primary'>Load next</button>}\r\n    </React.Fragment>\r\n  }\r\n","import React, {useEffect, useState}  from 'react'\r\n\r\nimport {TweetCreate} from './create'\r\nimport {Tweet} from './detail'\r\nimport {apiTweetDetail} from './lookup'\r\nimport {FeedList} from './feed'\r\nimport {TweetsList} from './list'\r\n\r\nexport function FeedComponent(props) {\r\n  const [newTweets, setNewTweets] = useState([])\r\n  const canTweet = props.canTweet === \"false\" ? false : true\r\n  const handleNewTweet = (newTweet) =>{\r\n    let tempNewTweets = [...newTweets]\r\n    tempNewTweets.unshift(newTweet)\r\n    setNewTweets(tempNewTweets)\r\n  }\r\n  return <div className={props.className}>\r\n          {canTweet === true && <TweetCreate didTweet={handleNewTweet} className='col-12 mb-3' />}\r\n        <FeedList newTweets={newTweets} {...props} />\r\n  </div>\r\n}\r\n\r\nexport function TweetsComponent(props) {\r\n    const [newTweets, setNewTweets] = useState([])\r\n    const canTweet = props.canTweet === \"false\" ? false : true\r\n    const handleNewTweet = (newTweet) =>{\r\n      let tempNewTweets = [...newTweets]\r\n      tempNewTweets.unshift(newTweet)\r\n      setNewTweets(tempNewTweets)\r\n    }\r\n    return <div className={props.className}>\r\n            {canTweet === true && <TweetCreate didTweet={handleNewTweet} className='col-12 mb-3' />}\r\n          <TweetsList newTweets={newTweets} {...props} />\r\n    </div>\r\n}\r\n\r\n\r\nexport function TweetDetailComponent(props){\r\n  const {tweetId} = props\r\n  const [didLookup, setDidLookup] = useState(false)\r\n  const [tweet, setTweet] = useState(null)\r\n\r\n  const handleBackendLookup = (response, status) => {\r\n    if (status === 200) {\r\n      setTweet(response)\r\n    } else {\r\n      alert(\"There was an error finding your tweet.\")\r\n    }\r\n  }\r\n  useEffect(()=>{\r\n    if (didLookup === false){\r\n\r\n      apiTweetDetail(tweetId, handleBackendLookup)\r\n      setDidLookup(true)\r\n    }\r\n  }, [tweetId, didLookup, setDidLookup])\r\n\r\n  return tweet === null ? null : <Tweet tweet={tweet} className={props.className} />\r\n }","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nimport {TweetsComponent} from './tweets'\n\n\nfunction App() {\n  \n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <div>\n          <TweetsComponent />\n        </div>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n      // [::1] is the IPv6 localhost address.\r\n      window.location.hostname === '[::1]' ||\r\n      // 127.0.0.0/8 are considered localhost for IPv4.\r\n      window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n      )\r\n  );\r\n  \r\n  export function register(config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n      // The URL constructor is available in all browsers that support SW.\r\n      const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n      if (publicUrl.origin !== window.location.origin) {\r\n        // Our service worker won't work if PUBLIC_URL is on a different origin\r\n        // from what our page is served on. This might happen if a CDN is used to\r\n        // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n        return;\r\n      }\r\n  \r\n      window.addEventListener('load', () => {\r\n        const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n  \r\n        if (isLocalhost) {\r\n          // This is running on localhost. Let's check if a service worker still exists or not.\r\n          checkValidServiceWorker(swUrl, config);\r\n  \r\n          // Add some additional logging to localhost, pointing developers to the\r\n          // service worker/PWA documentation.\r\n          navigator.serviceWorker.ready.then(() => {\r\n            console.log(\r\n              'This web app is being served cache-first by a service ' +\r\n                'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n            );\r\n          });\r\n        } else {\r\n          // Is not localhost. Just register service worker\r\n          registerValidSW(swUrl, config);\r\n        }\r\n      });\r\n    }\r\n  }\r\n  \r\n  function registerValidSW(swUrl, config) {\r\n    navigator.serviceWorker\r\n      .register(swUrl)\r\n      .then(registration => {\r\n        registration.onupdatefound = () => {\r\n          const installingWorker = registration.installing;\r\n          if (installingWorker == null) {\r\n            return;\r\n          }\r\n          installingWorker.onstatechange = () => {\r\n            if (installingWorker.state === 'installed') {\r\n              if (navigator.serviceWorker.controller) {\r\n                // At this point, the updated precached content has been fetched,\r\n                // but the previous service worker will still serve the older\r\n                // content until all client tabs are closed.\r\n                console.log(\r\n                  'New content is available and will be used when all ' +\r\n                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n                );\r\n  \r\n                // Execute callback\r\n                if (config && config.onUpdate) {\r\n                  config.onUpdate(registration);\r\n                }\r\n              } else {\r\n                // At this point, everything has been precached.\r\n                // It's the perfect time to display a\r\n                // \"Content is cached for offline use.\" message.\r\n                console.log('Content is cached for offline use.');\r\n  \r\n                // Execute callback\r\n                if (config && config.onSuccess) {\r\n                  config.onSuccess(registration);\r\n                }\r\n              }\r\n            }\r\n          };\r\n        };\r\n      })\r\n      .catch(error => {\r\n        console.error('Error during service worker registration:', error);\r\n      });\r\n  }\r\n  \r\n  function checkValidServiceWorker(swUrl, config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl, {\r\n      headers: { 'Service-Worker': 'script' }\r\n    })\r\n      .then(response => {\r\n        // Ensure service worker exists, and that we really are getting a JS file.\r\n        const contentType = response.headers.get('content-type');\r\n        if (\r\n          response.status === 404 ||\r\n          (contentType != null && contentType.indexOf('javascript') === -1)\r\n        ) {\r\n          // No service worker found. Probably a different app. Reload the page.\r\n          navigator.serviceWorker.ready.then(registration => {\r\n            registration.unregister().then(() => {\r\n              window.location.reload();\r\n            });\r\n          });\r\n        } else {\r\n          // Service worker found. Proceed as normal.\r\n          registerValidSW(swUrl, config);\r\n        }\r\n      })\r\n      .catch(() => {\r\n        console.log(\r\n          'No internet connection found. App is running in offline mode.'\r\n        );\r\n      });\r\n  }\r\n  \r\n  export function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n      navigator.serviceWorker.ready.then(registration => {\r\n        registration.unregister();\r\n      });\r\n    }\r\n  }","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {ProfileBadgeComponent} from './profiles'\nimport {FeedComponent, TweetsComponent, TweetDetailComponent} from './tweets'\nimport * as serviceWorker from './serviceWorker';\n\nconst appEl = document.getElementById('root')\nif (appEl) {\n    ReactDOM.render(<App />, appEl);\n}\nconst e = React.createElement\nconst tweetsEl = document.getElementById(\"tweetme-2\")\nif (tweetsEl) {\n    ReactDOM.render(\n        e(TweetsComponent, tweetsEl.dataset), tweetsEl);\n}\n\nconst tweetFeedEl = document.getElementById(\"tweetme-2-feed\")\nif (tweetFeedEl) {\n    ReactDOM.render(\n        e(FeedComponent, tweetFeedEl.dataset), tweetFeedEl);\n}\n\nconst tweetDetailElements = document.querySelectorAll(\".tweetme-2-detail\")\n\ntweetDetailElements.forEach(container=> {\n    ReactDOM.render(\n        e(TweetDetailComponent, container.dataset), \n        container);\n})\n\nconst userProfileBadgeElements = document.querySelectorAll(\".tweetme-2-profile-badge\")\n\nuserProfileBadgeElements.forEach(container=> {\n    ReactDOM.render(\n        e(ProfileBadgeComponent, container.dataset), \n        container);\n})\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}